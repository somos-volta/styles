  // https://www.google.com/search?q=button+styles&safe=off&sxsrf=ALeKk00HmZ8gllt9rAr7d6ecL4QDKBtgaw:1595991903184&source=lnms&tbm=isch&sa=X&ved=2ahUKEwjhhtCTvfHqAhUtGbkGHSGwDq0Q_AUoAXoECAwQAw&biw=1920&bih=1098
//

@mixin --var-solid-button($color,$prefix:"button.") {
  $color: unquote($color);
  .#{$prefix}#{$color} {
    --button-border-color: var(--#{$color}-color);
    --button-fill-color: var(--#{$color}-color);
  }
}

@mixin outline-button($name,$color,$prefix:"button.outline.") {
  a.#{$prefix}#{$name},
  .#{$prefix}#{$name} {
    --button-text-color: #{$color};
    --button-border-color: #{$color};
    --button-fill-color: transparent;

    @include hover-focus-active {
      --button-text-color: white;
      --button-border-color: transparent;
      --button-fill-color: #{$color};
    }
  }
}
@mixin solid-button($name,$color,$prefix:"button.solid.") {
  a.#{$prefix}#{$name},
  .#{$prefix}#{$name} {
    --button-border-color: transparent;
    --button-fill-color: #{$color};

    @include hover-focus-active {
      filter: brightness(1.2);
      box-shadow: $shadow-elevation-3;
      //--text-color: var(--inverse-color);
      //--border-color: #{$color};
      //--fill-color: #{$color};
    }
  }
}


@include exports("component/buttons") {
@if $include-components {
@include css-comment("Buttons");

  .button {
    @extend %button;
    //--text-color:  var(--button-text-color);
    //--border-color:  var(--button-border-color);
    //--fill-color: var(--button-fill-color);
    //--shape: var(--button-shape);
    //--padding: var(--button-padding) calc(var(--button-padding)*1.5);
    --button-text-color: var(--text-color);
    --button-border-color: null;
    --button-fill-color: transparent;
    --button-border: var(--base-border);
    --button-shape: var(--button-radius);

    border: var(--button-border);
    border-color: var(--button-border-color);
    border-radius: var(--button-shape);
    background-color: var(--button-fill-color);
    color: var(--button-text-color);
    //font-weight:  var(--button-font-weight);
    //line-height: var(--button-line-height);
    padding: .5rem 1rem;
    text-align: center;
    font-weight:  bold;
    transition: $transition-1;

    @include hover-focus-active {
      --button-text-color:  var(--primary-color);
      color: var(--button-text-color);
      border-color: var(--button-border-color);
      background-color: var(--button-fill-color);
    }

    &:disabled, &.disabled {
      --button-border-color: var(--disabled-color);
      --button-text-color: var(--disabled-color);
      cursor: not-allowed;
    }
  }

  .button.solid {
    .mode-light & {
      --button-text-color: var(--inverse-color);
    }
    .mode-dark & {
      --button-text-color: var(--text-color);
    }
  }


  @include outline-button("default",var(--text-color));
  @include outline-button("primary",var(--primary-color));
  @include outline-button("secondary",var(--secondary-color));
  @include outline-button("info",var(--info-color));
  @include outline-button("success",var(--success-color));
  @include outline-button("warning",var(--warning-color));
  @include outline-button("danger",var(--danger-color));

  @include solid-button("default",var(--text-color));
  @include solid-button("primary",var(--primary-color));
  @include solid-button("secondary",var(--secondary-color));
  @include solid-button("info",var(--info-color));
  @include solid-button("success",var(--success-color));
  @include solid-button("warning",var(--warning-color));
  @include solid-button("danger",var(--danger-color));

  %button-circle {
    display: inline-flex;
    justify-content: center;
    align-items: center;
  }

  .button.shiny {
    --shape: #{$shape-rounded-xs};
  }
  .button.round {
    --shape: #{$shape-rounded-sm};
  }
  .button.rounded {
    --shape: #{$shape-rounded};
  }
  .button.circle {
    --shape: $shape-circle;
    line-height: 1.2;
    padding: 0;
    & {
      width: $control-input;
      height: $control-input;
    }
    &.small {
      width: $control-input-small;
      height: $control-input-small;
    }
    &.large {
      width: $control-input-large;
      height: $control-input-large;
    }
  }

  //.button.outline {
  //  border: 2px solid;
  //  background: transparent;
  //}
  //.button.solid {
  //  border-color: transparent;
  //}
  .button.block {
    width: 100%;
  }
  .button.small {
    padding: .25em .5em;
    font-size: 12px;
  }
  .button.large {
    padding: .75em 1.5em;
    font-size: 16px;
  }

  .button.line {
    padding-left: 0;
    padding-right: 0;
    border-color: transparent;
    border-bottom: var(--button-border);
    border-radius: 0;

    &.danger:hover {
      background-color: transparent;
      color: currentColor;
    }
  }

  //.button.submit {
  //  margin-top: 1rem;
  //}


  .button-group-toggle>.button input[type=checkbox],
  .button-group-toggle>.button input[type=radio],
  .button-group-toggle>.button-group>.button input[type=checkbox],
  .button-group-toggle>.button-group>.button input[type=radio] {
    position: absolute;
    clip: rect(0,0,0,0);
    pointer-events: none;
  }

}
}
