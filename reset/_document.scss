@mixin reset-document {
@include exports("reset/document") {

	// Document
	//
	// 1. Change from `box-sizing: content-box` so that `width` is not affected by `padding` or `border`.
	// 2. Change the default font family in all browsers.
	// 3. Correct the line height in all browsers.
	// 4. Prevent adjustments of font size after orientation changes in IE on Windows Phone and in iOS.
	// 5. Change the default tap highlight to be completely transparent in iOS.

	*,
	*::before,
	*::after {
		box-sizing: border-box; // 1
	}

	html {
		font-family: sans-serif; // 2
		line-height: 1.15; // 3
		-webkit-text-size-adjust: 100%; // 4
		-webkit-tap-highlight-color: rgba($black, 0); // 5
	}

	// Shim for "new" HTML5 structural elements to display correctly (IE10, older browsers)
	// TODO: remove in v5
	// stylelint-disable-next-line selector-list-comma-newline-after
	article, aside, figcaption, figure, footer, header, hgroup, main, nav, section {
		display: block;
	}

	// Body
	//
	// 1. Remove the margin in all browsers.
	// 3. Set an explicit initial text-align value so that we can later use
	//    the `inherit` value on things like `<th>` elements.

	body {
		margin: 0; // 1
		text-align: left; // 3
	}

	// Future-proof rule: in browsers that support :focus-visible, suppress the focus outline
	// on elements that programmatically receive focus but wouldn't normally show a visible
	// focus outline. In general, this would mean that the outline is only applied if the
	// interaction that led to the element receiving programmatic focus was a keyboard interaction,
	// or the browser has somehow determined that the user is primarily a keyboard user and/or
	// wants focus outlines to always be presented.
	//
	// See https://developer.mozilla.org/en-US/docs/Web/CSS/:focus-visible
	// and https://developer.paciellogroup.com/blog/2018/03/focus-visible-and-backwards-compatibility/
	[tabindex="-1"]:focus:not(:focus-visible) {
		outline: 0 !important;
	}

}
}
